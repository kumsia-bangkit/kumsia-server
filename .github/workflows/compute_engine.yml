name: Deploy to Compute Engine

on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      
    - name: Login to Docker Hub
      run: echo ${{ secrets.DOCKERHUB_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

    - name: Copy GCP credentials to local file
      run: echo "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}" > gcp-key.json

    - name: Build and push Docker image
      run: |
        docker buildx create --use
        docker buildx build \
          --file Dockerfile \
          --tag ${{ secrets.REGISTRY_USER }}/${{ secrets.IMAGE_NAME }}:${{ secrets.IMAGE_TAG }} \
          --push .
        rm gcp-key.json

    env:
      DOCKER_CLI_EXPERIMENTAL: enabled
      DOCKER_BUILDKIT: 1

  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Set up SSH
      run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "StrictHostKeyChecking no" >> ~/.ssh/config
        
    - name: Deployment
      run: |
        ssh -i ~/.ssh/id_rsa ${{ secrets.GCP_USERNAME }}@${{ secrets.GCP_STATIC_IP }} "
        sudo docker container rm -f ${{ secrets.CONTAINER_NAME }} || true &&
        sudo docker image rm -f ${{ secrets.REGISTRY_USER }}/${{ secrets.IMAGE_NAME }}:${{ secrets.IMAGE_TAG }} || true &&
        sudo docker run -d -p 2134:2134 \
            -e "DB_HOST=${{ secrets.DB_HOST }}" \
            -e "DB_PORT=${{ secrets.DB_PORT }}" \
            -e "DB_NAME=${{ secrets.DB_NAME }}" \
            -e "DB_USER=${{ secrets.DB_USER }}" \
            -e "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" \
            -e "ALGORITHM=${{ secrets.ALGORITHM }}" \
            -e "SECRET_KEY=${{ secrets.SECRET_KEY }}" \
            -e "ACCESS_TOKEN_EXPIRE_DAYS=${{ secrets.ACCESS_TOKEN_EXPIRE_DAYS }}" \
            -e "GOOGLE_APPLICATION_CREDENTIALS=/code/gcp-key.json" \
            --name ${{ secrets.CONTAINER_NAME }} ${{ secrets.REGISTRY_USER }}/${{ secrets.IMAGE_NAME }}:${{ secrets.IMAGE_TAG }}"
